DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  password VARCHAR(255) NOT NULL,
  email VARCHAR(55) NOT NULL UNIQUE,
  name VARCHAR(55) NOT NULL,
  surname VARCHAR(55) NOT NULL,
  is_admin BOOL,
  special_apps BOOL DEFAULT FALSE,
  is_active BOOL DEFAULT TRUE,
  email_token INT,
  verified   BOOL DEFAULT FALSE, 
  pc         VARCHAR(255) DEFAULT '',  
  os VARCHAR(20) DEFAULT '',  
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS courses;
CREATE TABLE courses (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  title VARCHAR(50) NOT NULL,
  description VARCHAR(270) NOT NULL,
  author VARCHAR(30) NOT NULL,
  thumbnail VARCHAR(255) NOT NULL,
  preview VARCHAR(255) NOT NULL,
  rating INTEGER DEFAULT 0, 
  num_reviews INTEGER DEFAULT 0, 
  duration VARCHAR(30) NOT NULL, 
  is_active BOOL DEFAULT FALSE,
  price INTEGER DEFAULT 0,
  sort_order INTEGER, 
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS user_courses;
CREATE TABLE user_courses (
  user_id INTEGER NOT NULL,
  course_id INTEGER NOT NULL,
  price INTEGER DEFAULT 0,
  created_at VARCHAR(40) NOT NULL,
  PRIMARY KEY (user_id, course_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS user_apps;
CREATE TABLE user_apps (
  user_id INTEGER NOT NULL,
  app_id INTEGER NOT NULL,
  created_at VARCHAR(40) NOT NULL,
  PRIMARY KEY (user_id, app_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (app_id) REFERENCES apps(id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS apps;
CREATE TABLE apps (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  name VARCHAR(55) NOT NULL,
  process_name VARCHAR(55) NOT NULL,
  is_active BOOL DEFAULT TRUE,
  execute_always BOOL DEFAULT FALSE,
  created_at VARCHAR(40) NOT NULL
);


DROP TABLE IF EXISTS videos;
CREATE TABLE videos (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  title VARCHAR(50) NOT NULL,
  description VARCHAR(150) NOT NULL,
  video_hls VARCHAR(255) NOT NULL,
  thumbnail VARCHAR(255) NOT NULL,
  duration VARCHAR(20) NOT NULL, 
  length VARCHAR(155) NOT NULL, 
  views INTEGER DEFAULT 0, 
  course_id INTEGER NOT NULL, 
  created_at VARCHAR(40) NOT NULL,
  s_review BOOL DEFAULT FALSE
);

DROP TABLE IF EXISTS history;
CREATE TABLE history (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  video_id INTEGER NOT NULL,
  course_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL,
  video_resume VARCHAR(55) NOT NULL,
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS files;
CREATE TABLE files (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  path VARCHAR(255) NOT NULL,
  page INTEGER NOT NULL,
  video_id INTEGER NOT NULL, 
  created_at VARCHAR(40) NOT NULL
);


DROP TABLE IF EXISTS reviews;
CREATE TABLE reviews (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  course_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL,
  author VARCHAR(55) NOT NULL,
  description VARCHAR(255) NOT NULL,
  rating INTEGER NOT NULL, 
  public BOOL DEFAULT FALSE,
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS notes;
CREATE TABLE notes (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  body VARCHAR(255) NOT NULL,
  video_title VARCHAR(50) NOT NULL,
  video_id VARCHAR(50) NOT NULL,
  time VARCHAR(255) NOT NULL,
  m_time VARCHAR(255) NOT NULL,
  course_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL
);

DROP TABLE IF EXISTS notifications;
CREATE TABLE notifications (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  n_type VARCHAR(40) NOT NULL,
  info VARCHAR(255) NOT NULL,
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS policy;
CREATE TABLE policy (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  content VARCHAR(55) NOT NULL,
  p_type VARCHAR(40) NOT NULL,
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS user_log;
CREATE TABLE user_log (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  content VARCHAR(255) NOT NULL,
  l_type VARCHAR(40) NOT NULL,
  user_id INTEGER NOT NULL,
  created_at VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS admin_log;
CREATE TABLE admin_log (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  content VARCHAR(255) NOT NULL,
  l_type VARCHAR(40) NOT NULL,
  created_at VARCHAR(40) NOT NULL
);
